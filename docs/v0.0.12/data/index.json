{"id":0,"name":"typedoc-plugin-hot-dev - v0.0.12","kind":1,"flags":{},"originalName":"","children":[],"groups":[{"title":"Modules","children":[48,1,117,199,269,47,14]}],"is":{"declaration":false},"location":{"query":"index","hash":""},"text":{"readme":"<p><a href=\"https://codecov.io/gh/citkane/typedoc-plugin-hot-dev\"><img src=\"https://codecov.io/gh/citkane/typedoc-plugin-hot-dev/branch/main/graph/badge.svg?token=GXPS7CMTXP\" alt=\"codecov\"></a>\n<a href=\"https://github.com/citkane/typedoc-plugin-hot-dev/actions/workflows/release.yml\"><img src=\"https://github.com/citkane/typedoc-plugin-hot-dev/actions/workflows/release.yml/badge.svg\" alt=\"RELEASE AND PUBLISH\"></a>\n<a href=\"https://github.com/citkane/typedoc-plugin-hot-dev\"><img src=\"https://badgen.net/badge/icon/github?icon=github&label\" alt=\"GitHub\"></a>\n<a href=\"https://npmjs.com/package/typedoc-plugin-hot-dev\"><img src=\"https://badgen.net/badge/icon/npm?icon=npm&label\" alt=\"Npm\"></a>\n<a href=\"https://citkane.github.io/typedoc-plugin-hot-dev/stable\"><img src=\"https://img.shields.io/badge/docs-stable-teal.svg\" alt=\"docs stable\"></a>\n<a href=\"https://citkane.github.io/typedoc-plugin-hot-dev/dev\"><img src=\"https://img.shields.io/badge/docs-dev-teal.svg\" alt=\"docs dev\"></a></p>\n\n<a href=\"#ðŸ”¥-typedoc-plugin-hot-dev\" id=\"ðŸ”¥-typedoc-plugin-hot-dev\" style=\"color: inherit; text-decoration: none;\">\n  <h1>ðŸ”¥ Typedoc-Plugin-Hot-Dev</h1>\n</a>\n<p>This is a helper for <a href=\"https://typedoc.org/\">TypeDoc</a> theme development.</p>\n<p>Think &#39;create-react-app&#39; live server - just for TypeDoc.</p>\n<ul>\n<li>Quick compile for media asset updates (eg. css)</li>\n<li>Slow(er) compile for source files (documents get rebuilt).</li>\n<li>Works with all typedoc entrypoint strategies.</li>\n<li>Automatically opens in your browser</li>\n</ul>\n<p><br /><br /></p>\n\n<a href=\"#hot-development-usage\" id=\"hot-development-usage\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Hot development usage</h2>\n</a>\n<pre><code class=\"language-bash\">npm i -D typedoc-plugin-hot-dev\nnpx hot-dev <span class=\"pl-c\">#please set up options first</span>\n</code></pre>\n\n<a href=\"#programatic-usage\" id=\"programatic-usage\" style=\"color: inherit; text-decoration: none;\">\n  <h4>Programatic usage</h4>\n</a>\n<pre><code class=\"language-ts\"><span class=\"pl-k\">import</span> { <span class=\"pl-smi\">init</span> } <span class=\"pl-k\">from</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>typedoc-hot-plugin-hot-dev<span class=\"pl-pds\">'</span></span>;\n\n<span class=\"pl-c\">// do your pre-processing logic, sass, etc.</span>\n\n<span class=\"pl-en\">init</span>([, <span class=\"pl-smi\">options</span>]);\n</code></pre>\n<p><br /><br /></p>\n\n<a href=\"#options\" id=\"options\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Options</h2>\n</a>\n<p>Options can be passed into <code>init(options)</code> or defined in <code>typedoc.json</code> under the key of <code>&quot;hot-dev&quot;:{...}</code></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">key</th>\n<th align=\"left\">Description</th>\n<th align=\"left\">Type</th>\n<th align=\"center\">Required</th>\n<th align=\"center\">Default Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\"><strong><em>sourceDist</em></strong></td>\n<td align=\"left\">The relative path to the root of your theme&#39;s tsc compiled code. Hot-dev watches here for source changes, so if it is not the default you must define it.</td>\n<td align=\"left\"><em>string</em></td>\n<td align=\"center\"><strong>no</strong></td>\n<td align=\"center\">&quot;dist&quot;</td>\n</tr>\n<tr>\n<td align=\"left\"><strong><em>targetCwd</em></strong></td>\n<td align=\"left\">The relative path to the root of the project that you want to build documentation for. The default is documentation for the theme you are developing.</td>\n<td align=\"left\"><em>string</em></td>\n<td align=\"center\"><strong>no</strong></td>\n<td align=\"center\">&quot;./&quot;</td>\n</tr>\n<tr>\n<td align=\"left\"><strong><em>npmScripts</em></strong></td>\n<td align=\"left\">Scripts defined in your package.json.scripts which you may want to run in a non-blocking fashion, eg. sass in watch mode.</td>\n<td align=\"left\"><em>string[]</em></td>\n<td align=\"center\"><strong>no</strong></td>\n<td align=\"center\">[]</td>\n</tr>\n</tbody></table>\n<p><br /><br /></p>\n\n<a href=\"#footnote\" id=\"footnote\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Footnote</h2>\n</a>\n<p>When, and only when, targeting an external project to build docs for your development theme (ie. <strong><em>targetCwd</em></strong> is pointing to a project that is not the theme you are developing), at that location you are likely to install the theme you are developing as so:</p>\n<pre><code><span class=\"pl-smi\">npm</span> <span class=\"pl-smi\">install</span> ..<span class=\"pl-k\">/</span><span class=\"pl-smi\">path</span><span class=\"pl-k\">/</span><span class=\"pl-smi\">to</span><span class=\"pl-k\">/</span><span class=\"pl-smi\">typedoc</span><span class=\"pl-k\">-</span><span class=\"pl-smi\">theme</span><span class=\"pl-k\">-</span><span class=\"pl-smi\">yourtheme</span><span class=\"pl-k\">/</span><span class=\"pl-smi\">dist</span>\n</code></pre>\n<p>This will create a symlink to your theme in the <code>./node_modules</code> folder of your external project.</p>\n<p>This will cause Typedoc&#39;s peerdependency to fail when running hot-dev. <a href=\"https://github.com/npm/npm/issues/5875\">This is an issue with node</a>.</p>\n<p>To work around this, from your theme directory directory, do:</p>\n<pre><code><span class=\"pl-smi\">npm</span> <span class=\"pl-smi\">install</span> ..<span class=\"pl-k\">/</span><span class=\"pl-smi\">some</span><span class=\"pl-k\">/</span><span class=\"pl-smi\">other</span><span class=\"pl-k\">/</span><span class=\"pl-smi\">project</span><span class=\"pl-k\">/</span><span class=\"pl-smi\">node_modules</span><span class=\"pl-k\">/</span><span class=\"pl-smi\">typedoc</span>\n</code></pre>\n<p>This will ensure that typedoc instance is always from the highest level.</p>\n<p>After hot development work is done , do something like this in your theme to restore sanity:</p>\n<pre><code><span class=\"pl-smi\">npm</span> <span class=\"pl-smi\">remove</span> <span class=\"pl-smi\">typedoc</span>\n<span class=\"pl-smi\">npm</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">-</span><span class=\"pl-c1\">D</span> <span class=\"pl-smi\">typedoc</span>\n</code></pre>\n<p>and fix package.json with:</p>\n<pre><code class=\"language-jsonc\">    <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>peerDependencies<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">:</span> {\n        <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>typedoc<span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>^0.23.0<span class=\"pl-pds\">\"</span></span> <span class=\"pl-c\">//or whatever version is relevant</span>\n    }\n</code></pre>\n<p><br /><br /></p>\n\n<a href=\"#development-guidelines-and-howto39s\" id=\"development-guidelines-and-howto39s\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Development Guidelines and howto&#39;s</h2>\n</a>\n<p>Please refer to the <a href=\"https://github.com/citkane/typedoc-plugin-hot-dev/wiki/Development-Guidelines\">Wiki Page</a>.</p>\n"}}
